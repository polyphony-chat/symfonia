name: Build and Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main", "dev"]

env:
  CARGO_TERM_COLOR: always

# Auto-abort duplicate jobs (e.g. job being triggered again on push to open PR)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
      - name: Run pre-commit
        run: pre-commit run --all-files

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: ikalnytskyi/action-setup-postgres@v6
        with:
          username: symfonia
          password: trans-actional-database-haha-get-it
          database: symfoniadb
          port: 5432
        id: postgres
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"
      - uses: taiki-e/install-action@7cb2cdb5024b2b45585f150af1ee02e24b87edd7
        with:
          tool: cargo-binstall
      - name: Build, Test, Publish Coverage
        env:
          DATABASE_HOST: postgres
          DATABASE_USERNAME: symfonia
          DATABASE_PASSWORD: trans-actional-database-haha-get-it
          DATABASE_NAME: symfoniadb
          DATABASE_PORT: 5432
          SQLX_OFFLINE: true
          # This is only important for tests
          DATABASE_URL: ${{ steps.postgres.outputs.connection-uri }}
        run: |
          if [ -n "${{ secrets.COVERALLS_REPO_TOKEN }}" ]; then
            cargo binstall --no-confirm cargo-tarpaulin --force
            cargo tarpaulin --all-features --avoid-cfg-tarpaulin --tests --verbose --skip-clean --coveralls ${{ secrets.COVERALLS_REPO_TOKEN }} --timeout 120
          else
            echo "Code Coverage step is skipped on PRs from forks."
            cargo nextest run --verbose --all-features
          fi
